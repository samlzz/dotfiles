# Smart pane switching with awreness of Neovim splits (smart-splits.nvim).
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" 'send-keys C-h' "if -F '#{pane_at_left}' '' 'select-pane -L'"
bind -n C-j if-shell "$is_vim" 'send-keys C-j' "if -F '#{pane_at_bottom}' '' 'select-pane -D'"
bind -n C-k if-shell "$is_vim" 'send-keys C-k' "if -F '#{pane_at_top}' '' 'select-pane -U'"
bind -n C-l if-shell "$is_vim" 'send-keys C-l' "if -F '#{pane_at_right}' '' 'select-pane -R'"

# To allow ctrl + e to clean terminal (like ctrl + l)
bind -n C-e send-keys C-l
bind -n S-Left if-shell "$is_vim" 'send-keys S-Left' 'resize-pane -L 3'
bind -n S-Down if-shell "$is_vim" 'send-keys S-Down' 'resize-pane -D 3'
bind -n S-Up if-shell "$is_vim" 'send-keys S-Up' 'resize-pane -U 3'
bind -n S-Right if-shell "$is_vim" 'send-keys S-Right' 'resize-pane -R 3'

bind -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind r source-file ~/.config/tmux/tmux.conf \; display-message 'Config reloaded...'

set -g mouse on
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
set -g window-status-separator ''
set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',xterm-256color:Tc'

set -g @catppuccin_flavor 'mocha'
set -g @catppuccin_window_status_style 'custom'
set -g @catppuccin_window_flags 'icon'
set -g @catppuccin_window_flags_icon_last ''
set -g @catppuccin_window_flags_icon_current ''
set -g @catppuccin_window_left_separator ' '
set -g @catppuccin_window_middle_separator ' '
set -g @catppuccin_window_right_separator ''
set -g @catppuccin_window_current_left_separator ' '
set -g @catppuccin_window_current_middle_separator ' '
set -g @catppuccin_window_current_right_separator ''
set -g @catppuccin_status_left_separator 'â–ˆ'
set -g @catppuccin_status_background 'none'
set -g @catppuccin_window_text ' #{?#{==:#{pane_current_command},#(basename #{E:SHELL})},#(printf "#{pane_current_path}" | sed "s|^#{E:HOME}|~|"),#{pane_current_command}}' 
set -g @catppuccin_window_current_text ' #{?#{==:#{pane_current_command},#(basename #{E:SHELL})},#(printf "#{pane_current_path}" | sed "s|^#{E:HOME}|~|"),#{pane_current_command}}'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'catppuccin/tmux#v2.1.2'
set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

run '~/.config/tmux/plugins/tpm/tpm'
run-shell '~/.config/tmux/plugins/tmux-continuum/continuum.tmux'
# run-shell "(sleep 3 && tmux list-sessions | grep -q '^dummy' && [ \"\$(tmux list-sessions | wc -l)\" -gt 1 ] && tmux kill-session -t dummy) || true"

set -g status-right '#{E:@catppuccin_status_session}'
set -g status-left ''
